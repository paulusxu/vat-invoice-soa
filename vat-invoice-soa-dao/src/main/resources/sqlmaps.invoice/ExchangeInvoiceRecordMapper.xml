<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lenovo.invoice.dao.ExchangeInvoiceRecordMapper" >

  <sql id="allColumn">
    id,itCode,orderCode,BTCPOrderCode,shopid,exchangeTime,updateTime,state,exchangeType,
    oldType,oldInvoiceId,oldInvoiceTitle,oldInvoiceType,oldTaxNo,oldBankName,oldBankNo,oldAddress,oldPhone,
    newType,newInvoiceId,newInvoiceTitle,newInvoiceType,newTaxNo,newBankName,newBankNo,newAddress,newPhone,
    name,provinceId,province,city,county,address,phone,zip,lenovoId,paidTime
  </sql>
  
  <insert id="addExchangeInvoiceRecord" parameterType="com.lenovo.invoice.domain.ExchangeInvoiceRecord">
    insert into exchangeInvoiceRecord
      (id,itCode,orderCode,BTCPOrderCode,shopid,exchangeTime,updateTime,state,exchangeType,
      oldType,oldInvoiceId,oldInvoiceTitle,oldInvoiceType,oldTaxNo,oldBankName,oldBankNo,oldAddress,oldPhone,
      newType,newInvoiceId,newInvoiceTitle,newInvoiceType,newTaxNo,newBankName,newBankNo,newAddress,newPhone,
      name,provinceId,province,city,county,address,phone,zip,lenovoId,paidTime)
    values
      (#{id},#{itCode},#{orderCode},#{BTCPOrderCode},#{shopid},#{exchangeTime},#{updateTime},#{state},#{exchangeType},
      #{oldType},#{oldInvoiceId},#{oldInvoiceTitle},#{oldInvoiceType},#{oldTaxNo},#{oldBankName},#{oldBankNo},#{oldAddress},#{oldPhone},
      #{newType},#{newInvoiceId},#{newInvoiceTitle},#{newInvoiceType},#{newTaxNo},#{newBankName},#{newBankNo},#{newAddress},#{newPhone},
      #{name},#{provinceId},#{province},#{city},#{county},#{address},#{phone},#{zip},#{lenovoId},#{paidTime})
  </insert>

  <select id="getExchangeInvoiceRecord" parameterType="java.lang.String" resultType="com.lenovo.invoice.domain.ExchangeInvoiceRecord">
    SELECT
    <include refid="allColumn"/>
    FROM exchangeInvoiceRecord
    WHERE id=#{id}
  </select>

  <update id="updateExchangeInvoiceRecord" parameterType="com.lenovo.invoice.domain.ExchangeInvoiceRecord">
    UPDATE exchangeInvoiceRecord set state=#{state},updateTime=#{updateTime} WHERE id=#{id}
  </update>

  <update id="updateRecordBTCPCode" parameterType="com.lenovo.invoice.domain.ExchangeInvoiceRecord">
    UPDATE exchangeInvoiceRecord set BTCPOrderCode=#{BTCPOrderCode} WHERE orderCode=#{orderCode}
  </update>

  <select id="getExchangeInvoiceRecordList" parameterType="com.lenovo.invoice.domain.ExchangeInvoiceRecord" resultType="com.lenovo.invoice.domain.ExchangeInvoiceRecord">
    SELECT
    <include refid="allColumn"/>
    FROM exchangeInvoiceRecord
    <where>
      <if test="shopid!=null and shopid!=''">
        and shopid=#{shopid}
      </if>
      <if test="orderCode!=null and orderCode!=''">
        and orderCode=#{orderCode}
      </if>
      <if test="state!=null and state!=''">
        and state=#{state}
      </if>
      <if test="exchangeType!=null and exchangeType!=''">
        and exchangeType=#{exchangeType}
      </if>
      <if test="beginTime!=null and beginTime!=''">
        and exchangeTime>#{beginTime}
      </if>
      <if test="endTime!=null and endTime!=''">
        <![CDATA[ and exchangeTime<#{endTime} ]]>
      </if>
    </where>
    ORDER BY updateTime DESC
  </select>

  <select id="getExchangeInvoiceRecordByPage" parameterType="com.lenovo.invoice.domain.ExchangeInvoiceRecord" resultType="com.lenovo.invoice.domain.ExchangeInvoiceRecord">
    SELECT
    <include refid="allColumn"/>
    FROM exchangeInvoiceRecord
    <where>
      <if test="param2.shopid!=null and param2.shopid!=''">
        and shopid=#{param2.shopid}
      </if>
      <if test="param2.orderCode!=null and param2.orderCode!=''">
        and orderCode=#{param2.orderCode}
      </if>
      <if test="param2.state!=null and param2.state!=''">
        and state=#{param2.state}
      </if>
      <if test="param2.exchangeType!=null and param2.exchangeType!=''">
        and exchangeType=#{param2.exchangeType}
      </if>
      <if test="param2.beginTime!=null and param2.beginTime!=''">
        and exchangeTime>#{param2.beginTime}
      </if>
      <if test="param2.endTime!=null and param2.endTime!=''">
        <![CDATA[ and exchangeTime<#{param2.endTime} ]]>
      </if>
    </where>
    ORDER BY updateTime DESC
  </select>

</mapper>