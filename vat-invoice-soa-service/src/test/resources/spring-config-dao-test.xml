<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mongo="http://www.springframework.org/schema/data/mongo"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    		http://www.springframework.org/schema/beans/spring-beans.xsd
    		http://www.springframework.org/schema/tx
    		http://www.springframework.org/schema/tx/spring-tx.xsd
    		http://www.springframework.org/schema/aop
    		http://www.springframework.org/schema/aop/spring-aop.xsd
       		http://www.springframework.org/schema/context
     		http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo.xsd"
       >

    <context:component-scan base-package="com.lenovo.invoice.dao.*"/>

    <tx:annotation-driven transaction-manager="transactionManager" />

    <!-- 配置数据库 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName">
            <value>com.mysql.jdbc.Driver</value>
        </property>
        <property name="url">
            <value>jdbc:mysql://g.coupons.mysql.dtc.uat:3306/vat-invoice</value>
        </property>
        <property name="username">
            <value>dev_coupons</value>
        </property>
        <property name="password">
            <value>Fmjc2BlIRs</value>
        </property>
        <!-- 连接池最大使用连接数 -->
        <property name="maxActive">
            <value>1500</value>
        </property>
        <!-- 初始化连接大小 -->
        <property name="initialSize">
            <value>10</value>
        </property>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait">
            <value>50000</value>
        </property>
        <!-- 连接池最小空闲 -->
        <property name="minIdle">
            <value>10</value>
        </property>
        <!-- 自动清除无用连接 -->
        <property name="removeAbandoned">
            <value>true</value>
        </property>
        <!-- 清除无用连接的等待时间 -->
        <property name="removeAbandonedTimeout">
            <value>180</value>
        </property>
        <!-- 连接属性 -->
        <property name="connectionProperties">
            <value>clientEncoding=UTF-8</value>
        </property>
    </bean>

    <!-- Transaction Manager -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- Aop 事务管理控制 -->
    <aop:config>
        <aop:advisor id="managerTx" advice-ref="txAdvice" pointcut="execution(* com.lenovo.reward.service.*.impl.*ManagerImpl.*(..))" order="0"/>
    </aop:config>
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!-- get find等查询方法不使用事务 其他方法都使用事务控制，当发生异常时整个方法事务回滚 -->
            <tx:method name="get*" read-only="true" />
            <tx:method name="find*" read-only="true" />
            <tx:method name="*" propagation="REQUIRED" rollback-for="Exception" />
        </tx:attributes>
    </tx:advice>


    <bean id="miscTransactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
        <property name="transactionManager" ref="transactionManager"/>
        <!--使用数据库默认的隔离级别-->
        <property name="isolationLevelName" value="ISOLATION_DEFAULT"/>
        <!--如果没有事务则新建事务-->
        <property name="propagationBehaviorName" value="PROPAGATION_REQUIRES_NEW"/>
    </bean>

    <!-- 启用事务注解 -->
    <!--<tx:annotation-driven />-->

    <!-- MyBatis配置 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
        <property name="typeAliasesPackage" value="com.lenovo.invoice.domain.*" />
        <!-- 显式指定Mapper文件位置 -->
        <property name="mapperLocations"
                  value="classpath*:sqlmaps.invoice/*Mapper.xml" />
        <property name="configurationProperties">
            <props>
                <prop key="dialect">mysql</prop>
            </props>
        </property>
    </bean>

    <!-- scan for mappers and let them be autowired -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--扫描Mapper类并使它们自动装载-->
        <property name="basePackage" value="com.lenovo.invoice.dao" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>

    <!-- enable autowire -->
    <context:annotation-config/>

</beans>